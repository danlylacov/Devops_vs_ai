version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PWD}
      POSTGRES_DB: tododb
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d tododb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [appnet]

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks: [appnet]

  backend:
    build:
      context: ./  # путь к backend (там где main.py, models.py, requirements.txt)
      dockerfile: Dockerfile.backend
    env_file: .env.prod
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks: [appnet]

  frontend:
    build:
      context: ./frontend  # если фронт в подпапке; если нет — поставьте "."
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_URL: /api
    depends_on:
      - backend
    ports:
      - "80:80"
    networks: [appnet]

networks:
  appnet:

volumes:
  pgdata:
  redisdata:
